[tox]
min_version = 4.3.5

envlist =
    coverage_erase
    py{312, 311, 310, 39, 38}{-http-lxml,}
    py38-minimum_dependencies
    pypy3{-http,}
    coverage_report
    mypy
    docs

labels =
    update=update

skip_missing_interpreters = True
isolated_build = True


[testenv]
package = wheel
wheel_build_env = build_wheel

depends =
    py{312, 311, 310, 39, 38, py3}{-http,}{-lxml,}{-minimum_dependencies,}: coverage_erase
deps =
    -rrequirements/test/requirements.txt
    # The dependencies here must match the minimums declared in `pyproject.toml`.
    minimum_dependencies: requests==2.25.1
    minimum_dependencies: lxml==4.6.2
extras =
    http: http
    lxml: lxml
commands =
    coverage run -m pytest


[testenv:mypy]
deps = -rrequirements/mypy/requirements.txt
commands = mypy


[testenv:docs]
base_python = py3.12
skipsdist = true
skip_install = true
deps = -rrequirements/docs/requirements.txt
commands = sphinx-build -aWEnqb html docs/ build/docs


[testenv:coverage_erase]
skipsdist = true
skip_install = true
deps = -rrequirements/test/requirements.txt
commands = coverage erase


[testenv:coverage_report]
depends =
    py{312, 311, 310, 39, 38, py3}{-http,}{-lxml,}{-minimum_dependencies,}
skipsdist = true
skip_install = true
deps = -rrequirements/test/requirements.txt
commands_pre =
    coverage combine
    coverage html --fail-under=0
commands = coverage report


[testenv:update]
base_python = py3.12
recreate = true
description = Update tool dependency versions
skip_install = true
setenv =
    # The actionlint pre-commit hook needs the GOCACHE environment variables.
    GOCACHE={env_dir}/.gocache
deps =
    poetry
    poetry-plugin-export
    pre-commit
    upadup
commands =
    # Update test requirements
    poetry update --directory="requirements/docs" --lock
    poetry export --directory="requirements/docs" --output="requirements/docs/requirements.txt" --without-hashes
    poetry update --directory="requirements/mypy" --lock
    poetry export --directory="requirements/mypy" --output="requirements/mypy/requirements.txt" --without-hashes
    poetry update --directory="requirements/test" --lock
    poetry export --directory="requirements/test" --output="requirements/test/requirements.txt" --without-hashes

    # Update pre-commit hook versions
    pre-commit autoupdate
    upadup

    # Run pre-commit immediately, but ignore its exit code
    - pre-commit run -a


[flake8]
max-line-length = 88
extend-ignore = E203
