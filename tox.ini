[tox]
min_version = 4.3.5
envlist =
    coverage_erase
    py{3.14, 3.13, 3.12, 3.11, 3.10, 3.9}{-http-lxml,}
    pypy{3.11}{-http,}
    py3.9-minimum_dependencies
    coverage_report
    build
    mypy
    docs
labels =
    update=update
    prep-release=prep-release


[testenv]
package = wheel
wheel_build_env = build_wheel

depends =
    py{3.14, 3.13, 3.12, 3.11, 3.10, 3.9}{-http,}{-lxml,}{-minimum_dependencies,}: coverage_erase
    pypy{3.11}{-http,}: coverage_erase
deps =
    -rrequirements/test/requirements.txt
    # The dependencies here must match the minimums declared in `pyproject.toml`.
    minimum_dependencies: requests==2.32.0
    minimum_dependencies: lxml==4.6.2
extras =
    http: http
    lxml: lxml
commands =
    coverage run -m pytest


[testenv:mypy]
deps = -rrequirements/mypy/requirements.txt
commands = mypy


[testenv:docs]
base_python = py3.13
skipsdist = true
skip_install = true
deps = -rrequirements/docs/requirements.txt
commands = sphinx-build -aWEnqb html docs/ build/docs


[testenv:build]
base_python = py3.13
skip_install = true
deps =
    build
    twine
    uv
commands =
    python -m build --installer uv --outdir dist/
    twine check --strict dist/*


[testenv:coverage_erase]
skipsdist = true
skip_install = true
deps = -rrequirements/test/requirements.txt
commands = coverage erase


[testenv:coverage_report]
depends =
    py{3.14, 3.13, 3.12, 3.11, 3.10, 3.9}{-http,}{-lxml,}{-minimum_dependencies,}
    pypy{3.11}{-http,}
skipsdist = true
skip_install = true
deps = -rrequirements/test/requirements.txt
commands_pre =
    coverage combine
    coverage html --fail-under=0
commands = coverage report


[testenv:prep-release]
description = Make the changes needed to create a new release PR
skip_install = true
deps =
    poetry
    scriv
passenv =
    VERSION
commands =
    poetry version "{env:VERSION}"
    scriv collect


[testenv:update]
base_python = py3.13
recreate = true
description = Update tool dependency versions
skip_install = true
deps =
    poetry
    poetry-plugin-export
    pre-commit
    upadup
commands =
    # Update test requirements
    poetry update --directory="requirements/docs" --lock
    poetry export --directory="requirements/docs" --output="requirements.txt" --without-hashes
    poetry update --directory="requirements/mypy" --lock
    poetry export --directory="requirements/mypy" --output="requirements.txt" --without-hashes
    poetry update --directory="requirements/test" --lock
    poetry export --directory="requirements/test" --output="requirements.txt" --without-hashes

    # Update pre-commit hook versions
    pre-commit autoupdate
    upadup


[flake8]
max-line-length = 88
extend-ignore = E203
